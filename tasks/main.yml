---
- name: add repo key
  apt_key:
    url: http://nginx.org/keys/nginx_signing.key
    state: "{{ nginx_state | default('present') }}"
  when: ansible_os_family == "Debian"

- name: add offical deb repo
  apt_repository:
    repo: "{{ item }}"
    state: "{{ nginx_state | default('present') }}"
  with_items:
  - "deb http://nginx.org/packages/{{ansible_distribution | lower }}/ {{ ansible_distribution_release }} nginx"
  - "deb-src http://nginx.org/packages/{{ ansible_distribution | lower }}/ {{ ansible_distribution_release}} nginx"
  when: ansible_os_family == "Debian"

- name: install nginx
  apt:
    pkg: nginx
    state: "{{ nginx_state | default('present') }}"
  when: ansible_os_family == "Debian"

- name: install openssl
  apt:
    pkg: openssl
  when: nginx_openssl_dh_size is defined

- name: enable nginx service
  service:
    name: nginx
    state: "started"
    enabled: yes

- name: install nginx modules
  apt:
    pkg: "{{ item.name }}"
    state: "{{ item.state }}"
  with_items: nginx_dynamic_modules
  when: ansible_os_family == "Debian" and nginx_dynamic_modules is defined

- name: Assures conf.d dir exists
  file: 
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
#    mode: "{{ item.mode | default(0755) | int }}"
  with_items:
    - {path: "/etc/nginx/conf.d", owner: root, group: root, mode: 0755}
    - {path: "/etc/nginx/server.conf.d", owner: root, group: root, mode: 0755}
    - {path: "/etc/nginx/sites-available", owner: root, group: root, mode: 0755}
    - {path: "/etc/nginx/sites-enabled", owner: root, group: root, mode: 0755}
    - {path: "/var/www", owner: www-data, group: www-data, mode: 0755}

- name: Assures additinal dirs exists
  file: 
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
#    mode: "{{ item.mode | default(0755) | int }}"
  with_items: nginx_additinal_dirs

- stat: 
    path: "/etc/nginx/dh{{nginx_openssl_dh_size}}.pem"
  when: nginx_openssl_dh_size is defined
  register: dh_st

- command: "openssl dhparam -out /etc/nginx/dh{{nginx_openssl_dh_size}}.pem {{nginx_openssl_dh_size}}"
  args:
    creates: "/etc/nginx/dh{{nginx_openssl_dh_size}}.pem"
  when: dh_st is defined not dh_st.stat.exists

- name: install nginx conf
  template:
    src: "etc/nginx/nginx.conf.j2"
    dest: "/etc/nginx/nginx.conf"
    owner: root
    group: root
    mode: 0644
  tags: install_nginx_conf
  notify:
   - service nginx reload

- name: install nginx conf.d
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - {src: 'etc/nginx/conf.d/gzip.conf.j2', dest: '/etc/nginx/conf.d/10-gzip.conf'}
    - {src: 'etc/nginx/conf.d/includes.conf.j2', dest: '/etc/nginx/conf.d/10-includes.conf'}
  tags: install_nginx_conf
  notify:
   - service nginx reload

- name: Delete default nginx conf
  file:
    dest: "{{ item }}"
    state: absent
  with_items:
    - /etc/nginx/sites-enabled/default
    - /etc/nginx/conf.d/default.conf
  notify:
    - service nginx reload

- name: install logrotate conf
  template:
    src: "etc/logrotate.d/nginx.j2"
    dest: "/etc/logrotate.d/nginx"
    owner: root
    group: root
    mode: 0644
  tags: install_nginx_logrotate
